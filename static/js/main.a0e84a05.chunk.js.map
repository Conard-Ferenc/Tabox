{"version":3,"sources":["config/headbox.yml","config/tabox.yml","components/GithubBox.jsx","components/TaboxBox.jsx","components/SearchBox.jsx","components/LogoBox.jsx","components/MenuBox.jsx","pages/App.js","pages/NoMatch.js","Router.js","serviceWorkerRegistration.js","index.js"],"names":["Text","Typography","GithubBox","props","name","config","collapsed","useState","data","setData","loading","setLoading","useEffect","fetch","then","res","json","map","item","index","repoName","repoUrl","html_url","repoDesc","description","Ignore","indexOf","style","paddingRight","transition","href","target","rel","size","hoverable","width","height","borderRadius","span","shape","src","direction","strong","Paragraph","Tabox","Object","keys","id","margin","title","avatar","logo","subTitle","marginLeft","gutter","content","subItem","subIndex","tagUrl","tagDesc","tagAvatar","prototype","toString","call","Search","Input","SearchBox","search","selected","setSelected","checked","setChecked","firstItem","itemName","value","push","searchList","setSearchList","maxWidth","onClick","e","items","key","selectedKeys","mode","backgroundColor","boxName","Item","placeholder","enterButton","allowClear","onSearch","event","className","_reactName","undefined","forEach","window","open","Group","onChange","check","defaultValue","Title","Logobox","link","preview","level","color","display","MenuBox","headConfig","taboxConfig","defaultSelectedKeys","theme","onSelect","document","getElementById","scrollIntoView","block","behavior","marginBottom","marginRight","Header","Layout","Content","Footer","Sider","App","YAML","load","headboxFile","taboxFile","hide","setCollapsed","minHeight","collapsible","onCollapse","overflow","position","left","background","marginTop","Date","getHours","getMinutes","padding","textAlign","status","extra","type","IRouter","exact","path","component","NoMatch","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","render","URL","process","origin","addEventListener","headers","response","contentType","get","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.a0e84a05.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/headbox.b0be706d.yml\";","export default __webpack_public_path__ + \"static/media/tabox.0b75b32e.yml\";","/*\n * @Author: fzf404\n * @Date: 2021-04-26 21:38:58\n * @LastEditTime: 2021-12-26 10:41:31\n * @Description: 渲染Github组件\n */\nimport { useState, useEffect, Fragment } from 'react'\n\nimport { Card, Avatar, Typography, Row, Col, Space, Empty } from 'antd'\n\nconst { Text } = Typography\n\n// 渲染Github的组件\nexport default function GithubBox(props) {\n  const { name, config, collapsed } = props\n\n  const [data, setData] = useState(0)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    const fetchData = () => {\n      fetch(`https://api.github.com/users/${name}/repos`)\n        .then((res) => res.json())\n        .then((data) => {\n          setData(data)\n          setLoading(false)\n        })\n    }\n    fetchData()\n  }, [name, config])\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Empty />\n      ) : (\n        data.map((item, index) => {\n          let repoName = item.name\n          let repoUrl = item.html_url\n          let repoDesc = item.description\n          if (config['Github'].Ignore.indexOf(repoName) === -1) {\n            return (\n              <Col\n                key={index}\n                style={{\n                  paddingRight: collapsed ? '16px' : '6px',\n                  transition: 'padding 300ms',\n                }}>\n                <a href={repoUrl} target=\"_blank\" rel=\"noreferrer\">\n                  <Card\n                    size=\"small\"\n                    hoverable={true}\n                    style={{\n                      width: 242,\n                      height: 108,\n                      borderRadius: 10,\n                    }}>\n                    <Row>\n                      <Col span={6}>\n                        <Avatar\n                          shape=\"square\"\n                          size={46}\n                          src={\n                            config['Github'][repoName]\n                              ? config['Github'][repoName]\n                              : 'logo/github.png'\n                          }\n                        />\n                      </Col>\n                      <Col span={18}>\n                        <Space direction=\"vertical\" size={2}>\n                          <Text strong>{repoName}</Text>\n                          <Text>{repoDesc}</Text>\n                        </Space>\n                      </Col>\n                    </Row>\n                  </Card>\n                </a>\n              </Col>\n            )\n          }\n          return null\n        })\n      )}\n    </Fragment>\n  )\n}\n","/*\n * @Author: fzf404\n * @Date: 2021-03-08 23:04:06\n * @LastEditTime: 2021-12-26 10:41:54\n * @Description: 渲染主界面\n */\nimport { Avatar, Card, Col, PageHeader, Row, Space, Typography } from 'antd'\nimport GithubBox from './GithubBox'\n\nconst { Text, Paragraph } = Typography\n\nexport default function Tabox(props) {\n  const { config, collapsed } = props\n\n  return (\n    <div>\n      {Object.keys(config).map((item, index) => {\n        return (\n          <div\n            id={item}\n            key={index}\n            style={{\n              margin: '4px auto',\n            }}>\n            <PageHeader\n              title={item}\n              avatar={{ src: config[item].logo, shape: 'square' }}\n              subTitle={config[item].description}>\n              <Paragraph style={{ marginLeft: 20 }} key={index}>\n                <Row gutter={[32, 24]}>\n                  {item === 'Github' ? (\n                    // Github部分的渲染\n                    // GithubBox(x, config)\n                    <GithubBox name={config[item].name} config={config} collapsed={collapsed} />\n                  ) : item === 'Memo' ? (\n                    // 备忘录的渲染\n                    <pre>{config[item].content}</pre>\n                  ) : (\n                    // 其他标签页的渲染\n                    Object.keys(config[item]).map((subItem, subIndex) => {\n                      let tagUrl = config[item][subItem][0]\n                      let tagDesc = config[item][subItem][1]\n                      let tagAvatar = config[item][subItem][2]\n                      return Object.prototype.toString.call(config[item][subItem]) ===\n                        '[object Array]' ? (\n                        <Col\n                          key={subIndex}\n                          style={{\n                            paddingRight: collapsed ? '10px' : '4px',\n                            transition: 'padding 300ms',\n                          }}>\n                          <a href={tagUrl} target=\"_blank\" rel=\"noreferrer\">\n                            <Card\n                              size=\"small\"\n                              hoverable={true}\n                              style={{\n                                width: 190,\n                                borderRadius: 10,\n                              }}>\n                              <Row>\n                                <Col span={8}>\n                                  <Avatar shape=\"square\" size={46} src={tagAvatar} />\n                                </Col>\n                                <Col span={16}>\n                                  <Space direction=\"vertical\" size={2}>\n                                    <Text strong>{subItem}</Text>\n                                    <Text>{tagDesc}</Text>\n                                  </Space>\n                                </Col>\n                              </Row>\n                            </Card>\n                          </a>\n                        </Col>\n                      ) : null\n                    })\n                  )}\n                </Row>\n              </Paragraph>\n            </PageHeader>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n","/*\n * @Author: fzf404\n * @Date: 2021-03-08 23:04:06\n * @LastEditTime: 2021-12-24 17:37:14\n * @Description: 搜索组件渲染\n */\n\nimport { useState } from 'react'\nimport { Input, Checkbox, Row, Col, Menu } from 'antd'\n\nconst { Search } = Input\n\nexport default function SearchBox(props) {\n  // 从父组件获得的config\n  const { config } = props\n  // 默认选中的box\n  const [selected, setSelected] = useState([Object.keys(config.search)[0]])\n  // 默认选中的check\n  const [checked, setChecked] = useState([\n    Object.keys(config.search[Object.keys(config.search)[0]])[0],\n  ])\n\n  // 刚进入时的check\n  let firstItem = []\n\n  for (let itemName in config.search[selected]) {\n    let item = (\n      <Col span={6} key={itemName}>\n        <Checkbox value={itemName}>{itemName}</Checkbox>\n      </Col>\n    )\n    firstItem.push(item)\n  }\n\n  // 默认展示的check\n  const [searchList, setSearchList] = useState(firstItem)\n\n  // 搜索事件处理函数\n  const onSearch = (value, event) => {\n    // 是否为删除事件\n    if (event.target.className === 'ant-input ant-input-lg' && event._reactName === 'onClick') {\n      return\n    }\n    if (checked[0] === undefined) {\n      window.open(\n        config.search[selected][Object.keys(config.search[selected])[0]] + value,\n        '_blank'\n      )\n      return\n    }\n    checked.forEach((item) => {\n      window.open(config.search[selected][item] + value, '_blank')\n    })\n  }\n\n  // 切换搜索box\n  const handleClick = (e) => {\n    let items = []\n    for (let itemName in config.search[e.key]) {\n      let item = (\n        <Col span={6} key={itemName}>\n          <Checkbox value={itemName}>{itemName}</Checkbox>\n        </Col>\n      )\n      items.push(item)\n    }\n    setSelected(e.key)\n    setChecked([])\n    setSearchList(items)\n  }\n\n  return (\n    <div\n      style={{\n        width: '66%',\n        maxWidth: '560px',\n        margin: '2em auto',\n      }}>\n      <Menu\n        onClick={handleClick}\n        selectedKeys={selected}\n        mode=\"horizontal\"\n        style={{\n          backgroundColor: 'transparent',\n        }}>\n        {/* {boxList} */}\n        {Object.keys(config.search).map((boxName) => {\n          return <Menu.Item key={boxName}>{boxName}</Menu.Item>\n        })}\n      </Menu>\n      <Search placeholder=\"Search\" enterButton=\"搜索\" size=\"large\" allowClear onSearch={onSearch} />\n      <Checkbox.Group\n        onChange={(check) => setChecked(check)}\n        defaultValue={checked}\n        style={{\n          margin: '0 2em',\n          width: '100%',\n        }}>\n        <Row>{searchList}</Row>\n      </Checkbox.Group>\n    </div>\n  )\n}\n","/*\n * @Author: fzf404\n * @Date: 2021-03-08 23:04:06\n * @LastEditTime: 2021-12-24 17:37:08\n * @Description: 标题Logo组件\n */\nimport { Image, Typography } from 'antd'\n\nconst { Title } = Typography\n\n// 侧边栏标题及logo的组件\nexport default function Logobox(props) {\n  const { collapsed, config } = props\n  return (\n    <div style={{ margin: '1.3em' }}>\n      <a href={config.config.link} target='_blank\" rel=\"noreferrer'>\n        <Image width={40} src={config.config.logo} preview={false} />\n        <Title\n          level={2}\n          style={{\n            color: '#fffc',\n            margin: '1em auto',\n            display: collapsed ? 'none' : '',\n          }}>\n          {config.config.name}\n        </Title>\n      </a>\n    </div>\n  )\n}\n","/*\n * @Author: fzf404\n * @Date: 2021-03-08 23:04:06\n * @LastEditTime: 2021-12-24 17:37:10\n * @Description: 渲染侧边栏\n */\nimport { Menu, Avatar, Space } from 'antd'\n\nimport Logo from './LogoBox'\n\nexport default function MenuBox(props) {\n  const { collapsed, headConfig, taboxConfig } = props\n\n  const onSelect = (e) => {\n    let item = document.getElementById(e.key)\n    if (item) {\n      item.scrollIntoView({ block: 'center', behavior: 'smooth' })\n    }\n  }\n\n  return (\n    <Menu defaultSelectedKeys={['']} mode=\"inline\" theme=\"dark\" onSelect={onSelect}>\n      <Logo collapsed={collapsed} config={headConfig} />\n      {Object.keys(taboxConfig).map((item, index) => {\n        return (\n          <Menu.Item key={item}>\n            <Space>\n              <Avatar\n                shape=\"square\"\n                size={20}\n                src={taboxConfig[item].logo}\n                style={{\n                  marginBottom: 4,\n                }}\n              />\n              <span\n                style={{\n                  marginLeft: collapsed ? '2em' : '',\n                  marginRight: collapsed ? '1em' : '',\n                }}>\n                {item}\n              </span>\n            </Space>\n          </Menu.Item>\n        )\n      })}\n    </Menu>\n  )\n}\n","/*\n * @Author: fzf404\n * @Date: 2021-09-09 21:50:25\n * @LastEditTime: 2021-12-24 17:36:52\n * @Description: 首页\n */\nimport { useState } from 'react'\n\nimport YAML from 'yamljs'\nimport headboxFile from '../config/headbox.yml'\nimport taboxFile from '../config/tabox.yml'\n\nimport Tabox from '../components/TaboxBox'\nimport Search from '../components/SearchBox'\nimport MenuBox from '../components/MenuBox'\n\nimport { Layout, BackTop, Typography } from 'antd'\n\nimport './App.css'\n\nconst { Title } = Typography\n\nconst { Header, Content, Footer, Sider } = Layout\n\nexport default function App() {\n  // 加载配置文件\n  const headConfig = YAML.load(headboxFile)\n  const taboxConfig = YAML.load(taboxFile)\n  // 侧边栏折叠状态的钩子\n  const [collapsed, setCollapsed] = useState(headConfig.config.hide)\n\n  // 基础框架\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Sider\n        collapsible\n        collapsed={collapsed}\n        onCollapse={setCollapsed}\n        width=\"220px\"\n        style={{\n          overflow: 'auto',\n          height: '100vh',\n          position: 'fixed',\n          left: 0,\n        }}>\n        <MenuBox collapsed={collapsed} headConfig={headConfig} taboxConfig={taboxConfig}></MenuBox>\n      </Sider>\n      <Layout className=\"site-layout\">\n        <Header\n          style={{\n            background: '#a7b0bb',\n          }}>\n          <Title\n            level={3}\n            style={{\n              color: '#eee',\n              marginLeft: collapsed ? 140 : 220,\n              transition: 'margin-left 300ms',\n              marginTop: 16,\n            }}>\n            {new Date().getHours() < 10 ? '0' + new Date().getHours() : new Date().getHours()}:\n            {new Date().getMinutes() < 10 ? '0' + new Date().getMinutes() : new Date().getMinutes()}\n          </Title>\n        </Header>\n        <BackTop />\n        <Content\n          style={{\n            margin: '24px 16px 0',\n            marginLeft: collapsed ? 160 : 240,\n            transition: 'margin-left 300ms',\n          }}>\n          <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\n            <Search config={headConfig} />\n            <Tabox config={taboxConfig} collapsed={collapsed} />\n          </div>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>\n          Tabox ©2021 Create by{' '}\n          <a target=\"_blank\" rel=\"noreferrer\" href=\"https://www.fzf404.top/\">\n            fzf404\n          </a>\n        </Footer>\n      </Layout>\n    </Layout>\n  )\n}\n","import { Result, Button } from 'antd'\n\nexport default function App() {\n  return (\n    <Result\n      status=\"404\"\n      title=\"404\"\n      subTitle=\"这里什么都没有哦~\"\n      extra={\n        <Button type=\"primary\" href=\"#\">\n          回到主页\n        </Button>\n      }\n    />\n  )\n}\n","import { HashRouter, Route, Switch } from 'react-router-dom'\nimport React from 'react'\n\nimport App from './pages/App'\nimport NoMatch from './pages/NoMatch'\n\nexport default function IRouter() {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\" component={App}></Route>\n        <Route path=\"*\" component={NoMatch} />\n      </Switch>\n    </HashRouter>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport Router from './Router'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\n\nrender(<Router />, document.getElementById('root'))\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}